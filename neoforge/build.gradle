import groovy.json.JsonSlurper
import groovy.json.JsonOutput

plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from at.absolutePath
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

dependencies {
    implementation "maven.modrinth:sodium:${project.sodium_version}-neoforge"
    runtimeOnly "me.shedaniel.cloth:cloth-config-neoforge:${project.cloth_config_version}"

    implementation(jarJar("me.fallenbreath:conditional-mixin-neoforge:${project.conditional_mixins_version}"))

    compileOnly(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-common:${project.mixinsquared_version}"))
    implementation(jarJar("com.github.bawnorton.mixinsquared:mixinsquared-neoforge:${project.mixinsquared_version}"))
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

sourceSets.main.resources { srcDir 'src/generated/resources' }
tasks.register("modifyMetaData") {
    def jsonFile = file('./build/generated/jarJar/META-INF/jarjar/metadata.json')
    doLast {
        def jsonContent = new JsonSlurper().parseText(jsonFile.text)
        def newEntry = [
                identifier: [
                        group: "com.github.Fallen-Breath.conditional-mixin",
                        artifact: "conditional-mixin-neoforge"
                ],
                version: [
                        range: "[0.6.3,)",
                        artifactVersion: "0.6.3"
                ],
                path: "META-INF/jarjar/conditional-mixin-neoforge-0.6.3.jar",
                isObfuscated: false
        ]
        jsonContent.jars << newEntry
        jsonFile.text = JsonOutput.prettyPrint(JsonOutput.toJson(jsonContent))
    }
}
tasks.named("jar") {
    dependsOn modifyMetaData
    //Files.write(getTemporaryDir().toPath().resolve("metadata.json"), MetadataIOHandler.toLines(metadata), StandardOpenOption.CREATE_NEW, StandardOpenOption.WRITE)
}